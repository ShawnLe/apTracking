compositor DepthGradNormMap0
{
    technique
    {
        // Temporary textures
        texture rt0 target_width target_height PF_FLOAT32_RGBA
        //texture rt0 target_width target_height PF_A8R8G8B8
        texture rt1 target_width target_height PF_FLOAT32_RGBA
        //texture rt1 target_width target_height PF_A8R8G8B8
        texture rt2 target_width target_height PF_R8G8B8A8
        texture rt3 target_width target_height PF_A8R8G8B8
        //texture rt0 target_width target_height PF_A8R8G8B8
        //texture rt1 target_width target_height PF_A8R8G8B8


        target rt0
        {
            // Render output from previous compositor (or original scene)
            input previous
        } 

        target rt2
        {
            // Render output from previous compositor (or original scene)
            input previous
        }

        /*target rt1
        {
            // Start with clear texture
            input none
            pass render_quad
            {
                // Renders a fullscreen quad with a material
                material GaussianFilter
                input 0 rt0
            }
        } */  



        target_output
        {
            // Start with clear output
            input none

            // Draw a fullscreen quad with the black and white image
            pass render_quad
            {
                // Renders a fullscreen quad with a material
                material EdgeGradMap
                input 0 rt0
                //  input 0 rt1
                //input 1 rt0
            }
        }
    }
}


compositor Grad
{
    technique
    {
        // Temporary textures
        texture rt0 target_width target_height PF_FLOAT32_RGBA
        texture rt1 target_width target_height PF_FLOAT32_RGBA


        target rt0
        {
            // Render output from previous compositor (or original scene)
            input previous
        } 


        target rt1
        {
            // Start with clear texture
            input none
            pass render_quad
            {
                // Renders a fullscreen quad with a material
                material GaussianFilter
                input 0 rt0
            }
        } 



        target_output
        {
            // Start with clear output
            input none

            // Draw a fullscreen quad with the black and white image
            pass render_quad
            {
                // Renders a fullscreen quad with a material
                material GradMap
                //input 0 rt0
                  input 0 rt1
                //input 1 rt0
            }
        }
    }
}


compositor Grad0
{
    technique
    {
        // Temporary textures
        texture rt0 target_width target_height PF_FLOAT32_RGBA
        texture rt1 target_width target_height PF_FLOAT32_RGBA
        texture rt2 target_width target_height PF_FLOAT32_RGBA


        target rt0
        {
            // Render output from previous compositor (or original scene)
            input previous
        } 

        target rt1
        {
            // Start with clear output
            input none

            material_scheme MRT

	    pass clear
            {
                clear
                   {
                     buffers colour depth stencil
                   } 

            }


            // Draw a fullscreen quad with the black and white image
            pass render_scene
            {

            }
        }


        target rt2
        {
            // Start with clear texture
            input none
            pass render_quad
            {
                // Renders a fullscreen quad with a material
                material GaussianFilter
                input 0 rt1
            }
        } 



        target_output
        {
            // Start with clear output
            input none

            // Draw a fullscreen quad with the black and white image
            pass render_quad
            {
                // Renders a fullscreen quad with a material
                material GradMap
                //input 0 rt0
                  input 0 rt2
                //input 1 rt0
            }
        }
    }
}

